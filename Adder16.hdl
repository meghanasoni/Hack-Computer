/* This 16 bit adder gives the Sum(16 bits)  of 2 inputs of 16 bits using a 
   CLA with higher level propagate and generate terms
   x + y = SUM */

CHIP Adder16{
    IN x[16] , y[16];
    OUT SUM[16];

    PARTS:

    // Higher level Propagate and Generate Terms.
    PropGen(x = x[0..3] , y = y[0..3]  , P = P0I , G = G0I);      // P0I = P3.P2.P1.P0   ,   G0 = P3.P2.P1.C0 +  
    PropGen(x = x[4..7] , y = y[4..7]  , P = P1I , G = G1I);
    PropGen(x = x[8..11] , y = y[8..11] , P = P2I , G = G2I);
    PropGen(x = x[12..15] , y = y[12..15] , P = P3I , G = G3I);

    // Gives C4 , C8 , C12 , C16 as outputs
    HigherLevelCLA(P0I = P0I , P1I = P1I , P2I = P2I , P3I = P3I , G0 = G0I,  G1 = G1I,  G2 = G2I,  G3 = G3I , C = false , C4 = C4 , C8 = C8 , C12 = C12 , C16 = C16);

    // Carry Look Ahead circuit with gives the remaining carry bits and calculates sum.
    CLA4(x = x[0..3] , y = y[0..3] , C = false , S = SUM[0..3]);
    CLA4(x = x[4..7] , y = y[4..7] , C = C4 , S = SUM[4..7]);
    CLA4(x = x[8..11] , y = y[8..11] , C = C8 , S = SUM[8..11]);
    CLA4(x = x[12..15] , y = y[12..15] , C = C12 , S = SUM[12..15]);
}